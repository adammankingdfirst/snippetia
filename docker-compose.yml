version: '3.8'

services:
  # Database
  postgres:
    image: postgres:15-alpine
    container_name: snippetia-db
    environment:
      POSTGRES_DB: snippetia
      POSTGRES_USER: snippetia_user
      POSTGRES_PASSWORD: snippetia_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/src/main/resources/db/migration:/docker-entrypoint-initdb.d
    networks:
      - snippetia-network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: snippetia-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - snippetia-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: snippetia-backend
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DATABASE_URL=jdbc:postgresql://postgres:5432/snippetia
      - DATABASE_USERNAME=snippetia_user
      - DATABASE_PASSWORD=snippetia_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
      - OAUTH2_GITHUB_CLIENT_ID=your-github-client-id
      - OAUTH2_GITHUB_CLIENT_SECRET=your-github-client-secret
      - OAUTH2_GOOGLE_CLIENT_ID=your-google-client-id
      - OAUTH2_GOOGLE_CLIENT_SECRET=your-google-client-secret
      - EMAIL_HOST=smtp.gmail.com
      - EMAIL_PORT=587
      - EMAIL_USERNAME=your-email@gmail.com
      - EMAIL_PASSWORD=your-app-password
      - FILE_STORAGE_PATH=/app/uploads
      - AI_API_KEY=your-openai-api-key
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
    volumes:
      - backend_uploads:/app/uploads
    networks:
      - snippetia-network
    restart: unless-stopped

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: snippetia-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
    networks:
      - snippetia-network
    restart: unless-stopped

  # Elasticsearch for advanced search
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: snippetia-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - snippetia-network

  # Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: snippetia-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - snippetia-network

  # Grafana for dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: snippetia-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    networks:
      - snippetia-network

volumes:
  postgres_data:
  redis_data:
  backend_uploads:
  elasticsearch_data:
  prometheus_data:
  grafana_data:

networks:
  snippetia-network:
    driver: bridge